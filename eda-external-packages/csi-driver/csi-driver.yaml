# Source: cert-manager-csi-driver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: cert-manager-csi-driver
    helm.sh/chart: cert-manager-csi-driver-v0.8.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.0"
    app.kubernetes.io/managed-by: Helm
  name: cert-manager-csi-driver
  namespace: eda-system # kpt-set: ${EDA_CORE_NAMESPACE}
---
# Source: cert-manager-csi-driver/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: cert-manager-csi-driver
    helm.sh/chart: cert-manager-csi-driver-v0.8.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.0"
    app.kubernetes.io/managed-by: Helm
  name: cert-manager-csi-driver
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests"]
  verbs: ["watch", "create", "delete", "list"]
---
# Source: cert-manager-csi-driver/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: cert-manager-csi-driver
    helm.sh/chart: cert-manager-csi-driver-v0.8.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.0"
    app.kubernetes.io/managed-by: Helm
  name: cert-manager-csi-driver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-csi-driver
subjects:
- kind: ServiceAccount
  name: cert-manager-csi-driver
  namespace: eda-system # kpt-set: ${EDA_CORE_NAMESPACE}
---
# Source: cert-manager-csi-driver/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cert-manager-csi-driver
  namespace: eda-system # kpt-set: ${EDA_CORE_NAMESPACE}
  labels:
    app.kubernetes.io/name: cert-manager-csi-driver
    helm.sh/chart: cert-manager-csi-driver-v0.8.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: cert-manager-csi-driver
  template:
    metadata:
      labels:
        app: cert-manager-csi-driver
        app.kubernetes.io/name: cert-manager-csi-driver
        helm.sh/chart: cert-manager-csi-driver-v0.8.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "v0.8.0"
        app.kubernetes.io/managed-by: Helm
      annotations:
        kubectl.kubernetes.io/default-container: cert-manager-csi-driver
    spec:
      serviceAccountName: cert-manager-csi-driver
      imagePullSecrets:
      - name: core # kpt-set: ${CORE_IMG_CREDENTIALS}
      containers:
      - name: node-driver-registrar
        image: "ghcr.io/nokia-eda/ext/sig-storage/csi-node-driver-registrar:v2.10.0" # kpt-set: ${CSI_REGISTRAR_IMG}
        imagePullPolicy: IfNotPresent
        args:
        - -v=1
        - --csi-address=/plugin/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/cert-manager-csi-driver/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: plugin-dir
          mountPath: /plugin
        - name: registration-dir
          mountPath: /registration
      - name: liveness-probe
        image: "ghcr.io/nokia-eda/ext/sig-storage/livenessprobe:v2.12.0" # kpt-set: ${CSI_LIVPROBE_IMG}
        imagePullPolicy: IfNotPresent
        args:
        - --csi-address=/plugin/csi.sock
        - --probe-timeout=3s
        - --health-port=9809
        - -v=1
        volumeMounts:
        - name: plugin-dir
          mountPath: /plugin
      - name: cert-manager-csi-driver
        securityContext:
          readOnlyRootFilesystem: true
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
          runAsUser: 0
        image: "ghcr.io/nokia-eda/ext/jetstack/cert-manager-csi-driver:v0.8.0" # kpt-set: ${CSI_DRIVER_IMG}
        imagePullPolicy: IfNotPresent
        args:
        - --log-level=1
        - --driver-name=csi.cert-manager.io
        - --node-id=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        - --data-root=csi-data-dir
        - --use-token-request=false
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix://plugin/csi.sock
        volumeMounts:
        - name: plugin-dir
          mountPath: /plugin
        - name: pods-mount-dir
          mountPath: /var/lib/kubelet/pods
          mountPropagation: "Bidirectional"
        - name: csi-data-dir
          mountPath: /csi-data-dir
          mountPropagation: "Bidirectional"
        ports:
        - containerPort: 9809
          name: healthz
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 5
          timeoutSeconds: 5
      volumes:
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/cert-manager-csi-driver
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet/pods
          type: Directory
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
      - name: csi-data-dir
        hostPath:
          path: /tmp/cert-manager-csi-driver
          type: DirectoryOrCreate
---
# Source: cert-manager-csi-driver/templates/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.cert-manager.io
  labels:
    app.kubernetes.io/name: cert-manager-csi-driver
    helm.sh/chart: cert-manager-csi-driver-v0.8.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podInfoOnMount: true
  volumeLifecycleModes:
  - Ephemeral
