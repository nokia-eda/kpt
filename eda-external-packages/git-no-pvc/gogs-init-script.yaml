apiVersion: v1
kind: ConfigMap
metadata:
  name: init-script
  namespace: eda-system # kpt-set: ${EDA_GOGS_NAMESPACE}
data:
  init.sh: |-
    #!/bin/bash
    declare -a REPOS=("customresources" "intents" "keycloak" "credentials" "usersettings" "apps" "catalog" "identity")
    # Number of seconds to wait for gogs to comeup
    MAX_RETRIES=30
    # MAX number of tries to create a repo
    MAX_RETRY_REPO_CREATION=10
    # Place the init marker in the persistent volume
    INIT_MARKER=/data/eda-git-init.done
    trap : TERM INT

    USER_CONFIG=/var/run/eda/user-config
    USERNAME_FILE=/var/run/eda/user-config/username
    PASSWORD_FILE=/var/run/eda/user-config/password

    until [[ -d "${USER_CONFIG}" ]] do echo "--> [$(date)] Waiting for "${USER_CONFIG}" to exist" && sleep 2s; done
    until [[ -f "${USERNAME_FILE}" ]] do echo "--> [$(date)] Waiting for "${USERNAME_FILE}" to exist" && sleep 2s; done
    until [[ -f "${PASSWORD_FILE}" ]] do echo "--> [$(date)] Waiting for "${PASSWORD_FILE}" to exist" && sleep 2s; done

    ADMIN_USER="$(cat "${USERNAME_FILE}" | base64 -d)"
    ADMIN_PASS="$(cat "${PASSWORD_FILE}" | base64 -d)"

    check_gogs() {
      curl -s localhost:3000 > /dev/null
      echo $?
    }

    create_repo() {
        repo=$1
        created=0
        retry_count=0
        while [[ $retry_count -lt $MAX_RETRY_REPO_CREATION ]]; do
            echo "--> [$(date)] Creating repository: ${repo}"
            curl \
                --fail-with-body \
                -X POST localhost:3000/api/v1/admin/users/eda/repos \
                -H "Content-Type: application/json" \
                -d "{\"name\":\"${repo}\",\"description\":\"Repository storing saved ${repo}\",\"auto_init\":true,\"private\":true}" \
                --user "${ADMIN_USER}:${ADMIN_PASS}"
            exit_code=$?
            echo ""
            if [[ $exit_code -ne 0 ]]; then
                retry_count=$((retry_count+1))
                sleep 10s
                echo "--> [$(date)] Could not create repo $repo - POST response $exit_code - retry_count $retry_count"
            else
                echo "--> [$(date)] Created repo $repo - retry_count $retry_count"
                created=1
                break
            fi
        done
        if [[ $created -ne 1 ]]; then echo "-->[$(date)] Could not create repo $repo - retry_count $retry_count - aborting" && exit 1; fi
    }

    /app/gogs/docker/start.sh &
    RETRY_COUNT=0
    until [ $(check_gogs) -eq 0 ] || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do
      echo "--> [$(date)] Waiting for Gogs to start..."
      sleep 1
      let RETRY_COUNT=RETRY_COUNT+1
    done

    if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
      echo "--> [$(date)] Gogs did not start in time. Exiting."
      exit 1
    fi

    if [[ ! -f "${INIT_MARKER}" ]] then
      echo "--> [$(date)] Init marker at ${INIT_MARKER} not found, creating admin user and repos"
      su - git -c "/app/gogs/gogs admin create-user --name ${ADMIN_USER} --password ${ADMIN_PASS} --admin --email eda@eda.dev"
      for repo in "${REPOS[@]}"; do
          create_repo "$repo"
      done
    else
      echo "--> [$(date)] Existing init marker at ${INIT_MARKER} found, skipping creation of admin user + repos"
    fi

    touch "${INIT_MARKER}"
    echo "--> [$(date)] Done init, sleeping to infinity and beyond"
    sleep infinity & wait
